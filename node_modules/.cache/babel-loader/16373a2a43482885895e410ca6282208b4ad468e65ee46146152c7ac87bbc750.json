{"ast":null,"code":"var _jsxFileName = \"/home/sean_suguitan/john-mayer-player/src/components/VideoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoList = () => {\n  _s();\n  const [videos, setVideos] = useState([]);\n  const apiKey = \"AIzaSyBVIOEDjrULYj_7yyTKCsUZswI6zyvlaVE\";\n  useEffect(() => {\n    const cachedVideos = localStorage.getItem(\"videos\");\n    if (cachedVideos) {\n      setVideos(JSON.parse(cachedVideos));\n    } else {\n      const fetchVideos = async () => {\n        try {\n          const params = {\n            key: apiKey,\n            part: \"snippet\",\n            q: \"John Mayer 2019 Live\",\n            type: \"video\",\n            maxResults: 3\n          };\n          const response = await axios.get(\"https://www.googleapis.com/youtube/v3/search\", {\n            params\n          });\n          console.log(\"Request URL:\", `https://www.googleapis.com/youtube/v3/search?${new URLSearchParams(params).toString()}`);\n          localStorage.setItem(\"videos\", JSON.stringify(response.data.items));\n          setVideos(response.data.items);\n        } catch (error) {\n          console.error(\"Error fetching videos:\", error);\n          if (error.response) {\n            console.log(\"Error Response Data:\", error.response.data);\n          }\n        }\n      };\n      fetchVideos();\n    }\n  }, [apiKey]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: videos.map(video => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-container\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `/video/${encodeURIComponent(video.id.videoId)}`,\n        className: \"video-link\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: video.snippet.thumbnails.default.url,\n          alt: video.snippet.title,\n          className: \"video-thumbnail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: video.snippet.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)\n    }, video.id.videoId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoList, \"39g9r2hk3cJXA16k+db4Z3Rqykw=\");\n_c = VideoList;\nexport default VideoList;\nvar _c;\n$RefreshReg$(_c, \"VideoList\");","map":{"version":3,"names":["React","useState","useEffect","axios","Link","jsxDEV","_jsxDEV","VideoList","_s","videos","setVideos","apiKey","cachedVideos","localStorage","getItem","JSON","parse","fetchVideos","params","key","part","q","type","maxResults","response","get","console","log","URLSearchParams","toString","setItem","stringify","data","items","error","children","map","video","className","to","encodeURIComponent","id","videoId","src","snippet","thumbnails","default","url","alt","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/sean_suguitan/john-mayer-player/src/components/VideoList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst VideoList = () => {\r\n  const [videos, setVideos] = useState([]);\r\n  const apiKey = \"AIzaSyBVIOEDjrULYj_7yyTKCsUZswI6zyvlaVE\";\r\n\r\n  useEffect(() => {\r\n    const cachedVideos = localStorage.getItem(\"videos\");\r\n    if (cachedVideos) {\r\n      setVideos(JSON.parse(cachedVideos));\r\n    } else {\r\n      const fetchVideos = async () => {\r\n        try {\r\n          const params = {\r\n            key: apiKey,\r\n            part: \"snippet\",\r\n            q: \"John Mayer 2019 Live\",\r\n            type: \"video\",\r\n            maxResults: 3,\r\n          };\r\n          const response = await axios.get(\r\n            \"https://www.googleapis.com/youtube/v3/search\",\r\n            { params }\r\n          );\r\n\r\n          console.log(\r\n            \"Request URL:\",\r\n            `https://www.googleapis.com/youtube/v3/search?${new URLSearchParams(\r\n              params\r\n            ).toString()}`\r\n          );\r\n\r\n          localStorage.setItem(\"videos\", JSON.stringify(response.data.items));\r\n\r\n          setVideos(response.data.items);\r\n        } catch (error) {\r\n          console.error(\"Error fetching videos:\", error);\r\n          if (error.response) {\r\n            console.log(\"Error Response Data:\", error.response.data);\r\n          }\r\n        }\r\n      };\r\n\r\n      fetchVideos();\r\n    }\r\n  }, [apiKey]);\r\n\r\n  return (\r\n    <div>\r\n      {videos.map((video) => (\r\n        <div key={video.id.videoId} className=\"video-container\">\r\n          <Link to={`/video/${encodeURIComponent(video.id.videoId)}`} className=\"video-link\">\r\n            <img\r\n              src={video.snippet.thumbnails.default.url}\r\n              alt={video.snippet.title}\r\n              className=\"video-thumbnail\"\r\n            />\r\n            <p>{video.snippet.title}</p>\r\n          </Link>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}